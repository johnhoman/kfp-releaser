// Code generated by go-swagger; DO NOT EDIT.

package pipeline_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/johnhoman/kfp-releaser/pkg/kfp/http/models"
)

// CreatePipelineVersionReader is a Reader for the CreatePipelineVersion structure.
type CreatePipelineVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreatePipelineVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreatePipelineVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCreatePipelineVersionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreatePipelineVersionOK creates a CreatePipelineVersionOK with default headers values
func NewCreatePipelineVersionOK() *CreatePipelineVersionOK {
	return &CreatePipelineVersionOK{}
}

/* CreatePipelineVersionOK describes a response with status code 200, with default header values.

A successful response.
*/
type CreatePipelineVersionOK struct {
	Payload *models.APIPipelineVersion
}

func (o *CreatePipelineVersionOK) Error() string {
	return fmt.Sprintf("[POST /apis/v1beta1/pipeline_versions][%d] createPipelineVersionOK  %+v", 200, o.Payload)
}
func (o *CreatePipelineVersionOK) GetPayload() *models.APIPipelineVersion {
	return o.Payload
}

func (o *CreatePipelineVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIPipelineVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePipelineVersionDefault creates a CreatePipelineVersionDefault with default headers values
func NewCreatePipelineVersionDefault(code int) *CreatePipelineVersionDefault {
	return &CreatePipelineVersionDefault{
		_statusCode: code,
	}
}

/* CreatePipelineVersionDefault describes a response with status code -1, with default header values.

CreatePipelineVersionDefault create pipeline version default
*/
type CreatePipelineVersionDefault struct {
	_statusCode int

	Payload *models.APIStatus
}

// Code gets the status code for the create pipeline version default response
func (o *CreatePipelineVersionDefault) Code() int {
	return o._statusCode
}

func (o *CreatePipelineVersionDefault) Error() string {
	return fmt.Sprintf("[POST /apis/v1beta1/pipeline_versions][%d] CreatePipelineVersion default  %+v", o._statusCode, o.Payload)
}
func (o *CreatePipelineVersionDefault) GetPayload() *models.APIStatus {
	return o.Payload
}

func (o *CreatePipelineVersionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
